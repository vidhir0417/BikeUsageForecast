library(tsibble)
library(tseries)
library(dbplyr)
library(forecast)
library(urca)
library(tidyverse)
library(fable)
library(lubridate)
library(feasts)
summ_data <- read.csv("FM Summarized Data.csv")
summ_data %>% View()
monthly_tsibble <- summ_data %>%
mutate(month = yearmonth(month)) %>%
as_tsibble(index = month)
monthly_tsibble %>%
autoplot() +
labs(title = 'MiBici Usage in ZMG',
y = 'Total amount of Public Bikes used') +
scale_y_continuous(limits = c(0, 500000), breaks = seq(0, 500000, 50000))
monthly_tsibble %>%
autoplot(log(Count)) +
labs(title = 'MiBici Usage in ZMG')
n <- nrow(monthly_tsibble)
training <- monthly_tsibble %>% slice(1:(n-12))
test <- monthly_tsibble %>% slice((n-12):n)
basemodels_fit <- monthly_tsibble %>%
!is.na(Count) %>%
model(
Seasonal_naive = SNAIVE(Count),
Naive = NAIVE(Count),
Drift = RW(Count ~ drift()),
Mean = MEAN(Count)
)
basemodels_fit
basemodels_fit <- monthly_tsibble %>%
!is.na(monthly_tsibble$Count) %>%
model(
Seasonal_naive = SNAIVE(monthly_tsibble$Count),
Naive = NAIVE(monthly_tsibble$Count),
Drift = RW(monthly_tsibble$Count ~ drift()),
Mean = MEAN(monthly_tsibble$Count)
)
basemodels_fit <- monthly_tsibble %>%
(monthly_tsibble$Count) %>%
model(
Seasonal_naive = SNAIVE(Count),
Naive = NAIVE(Count),
Drift = RW(Count ~ drift()),
Mean = MEAN(Count)
)
library(ggplot2)
basemodels_fit <- list(
Seasonal_naive = snaive(monthly_tsibble$Count),
Naive = naive(monthly_tsibble$Count),
Drift = rwf(monthly_tsibble$Count, drift = TRUE),
Mean = meanf(monthly_tsibble$Count)
)
basemodels_fit
basemodels_fit <- monthly_tsibble %>%
filter(!is.na(Count)) %>%
model(
Seasonal_naive = SNAIVE(Count),
Naive = NAIVE(Count),
Drift = RW(Count ~ drift()),
Mean = MEAN(Count)
)
basemodels_fit
basemodels_fc <- basemodels %>%
forecast(h='5 years')
basemodels <- monthly_tsibble %>%
filter(!is.na(Count)) %>%
model(
Seasonal_naive = SNAIVE(Count),
Naive = NAIVE(Count),
Drift = RW(Count ~ drift()),
Mean = MEAN(Count)
)
basemodels_fc <- basemodels %>%
forecast(h='5 years')
print(basemodels_fc, n=4)
basemodels_fc %>%
autoplot(monthly_tsibble, level = NULL) +
ggtitle("Forecasts for quarterly clay brick production") +
xlab("Month") + ylab("Count") +
guides(colour = guide_legend(title = "MiBici Usage in ZMG"))
basemodels_fc %>%
autoplot(monthly_tsibble, level = NULL) +
ggtitle("MiBici Usage in ZMG") +
xlab("Month") + ylab("Count") +
guides(colour = guide_legend(title = "Forecast"))
p <- basemodels_fc %>%
map(autoplot, monthly_tsibble, level = NULL) +
ggtitle("MiBici Usage in ZMG") +
xlab("Month") + ylab("Count") +
guides(colour = guide_legend(title = "Forecast"))
p <- basemodels_fc %>%
map2(names(basemodels_fc), ~ autoplot(.x, monthly_tsibble, level = NULL) +
ggtitle("MiBici Usage in ZMG") +
xlab("Month") + ylab("Count") +
guides(colour = guide_legend(title = "Forecast")) +
labs(color = .y)) +
autolayer(test, monthly_tsibble$Count, color = "blue")
forecasts %>%
autoplot(training) +
autolayer(test, Count, color = "blue") +
labs(title = 'MiBici Usage in ZMG',
x = "Months [1M]",
y = "Count")
forecasts <- monthly_train %>%
forecast(h = 24)
summary(ur.df(na.omit(monthly_tsibble$Count), type=c("trend"), lags=3))
first_seasonal_diff <- log(monthly_tsibble$Count) %>%
difference(lag=12) %>%
difference()
summary(ur.df(na.omit(first_seasonal_diff), type="none", lags=0))
monthly_tsibble %>%
gg_tsdisplay(difference(Count, 1),
plot_type = "partial", lag_max = 37)
monthly_tsibble %>%
gg_tsdisplay(difference(log(Count), 1),
plot_type = "partial", lag_max = 49)
monthly_tsibble %>%
gg_tsdisplay(log(Count) %>%
difference(lag=12) %>%
difference(), plot_type = "partial", lag_max = 49)
fit1 <- monthly_tsibble %>%
model(sarima_102 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,0,2)))
fit1 %>% report()
fit1 %>% gg_tsresiduals()
augment(fit1) %>%
features(.innov, ljung_box, lag = 12)
fit2 <- monthly_tsibble %>%
model(sarima_111 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,1,1)))
fit2 %>% report()
fit2 %>% gg_tsresiduals()
augment(fit2) %>%
features(.innov, ljung_box, lag = 12)
# Fitting the models to check which models are the best
fit <- monthly_tsibble %>%
model(arima_111 = ARIMA(Count ~ 1 + pdq(0,1,1)),
sarima_100 = ARIMA(Count ~ 1 + pdq(1,1,1) + PDQ(1,0,0)),
sarima_102 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,0,2)),
sarima_211 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(2,1,1)),
sarima_111 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,1,1))
)
# Checking the criteria of each model to check the best one(s)
View(
fit %>%
glance() %>%
arrange(AICc) %>%
select(.model:BIC)
)
# The best models
best_fits <- monthly_tsibble %>%
model(sarima_102 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,0,2)),
sarima_211 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(2,1,1)),
sarima_111 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,1,1)))
best_fits %>%
glance() %>%
arrange(AICc) %>%
select(.model:BIC)
monthly_train <- training %>%
model(sarima_111 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,1,1)),
sarima_102 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,0,2))
)
forecasts <- monthly_train %>%
forecast(h = 24)
forecasts %>%
autoplot(training) +
autolayer(test, Count, color = "blue") +
labs(title = 'MiBici Usage in ZMG',
x = "Months [1M]",
y = "Count")
bm_fc <- basemodels_fc %>%
autoplot(monthly_tsibble, level = NULL) +
ggtitle("MiBici Usage in ZMG") +
xlab("Month") + ylab("Count") +
guides(colour = guide_legend(title = "Forecast"))
bm_fc
basemodels_fc <- basemodels %>%
forecast(h=nrow(test)+12)
bm_fc <- basemodels_fc %>%
autoplot(monthly_tsibble, level = NULL) +
ggtitle("MiBici Usage in ZMG") +
xlab("Month") + ylab("Count") +
guides(colour = guide_legend(title = "Forecast"))
bm_fc
p <- basemodels_fc %>%
map2(names(basemodels_fc), ~ autoplot(.x, monthly_tsibble, level = NULL) +
ggtitle("MiBici Usage in ZMG") +
xlab("Month") + ylab("Count") +
guides(colour = guide_legend(title = "Forecast")) +
labs(color = .y)) +
autolayer(test, monthly_tsibble$Count, color = "blue")
forecasts %>%
autoplot(training) +
autolayer(test, Count, color = "blue") +
labs(title = 'MiBici Usage in ZMG',
x = "Months [1M]",
y = "Count")
basemodels_fc %>%
autoplot(monthly_tsibble, level = NULL) +
ggtitle("MiBici Usage in ZMG") +
xlab("Month") + ylab("Count") +
guides(colour = guide_legend(title = "Forecast"))
accuracy(forecasts, test) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MSE, MAPE)
##########################################################################
##                        Data set File Path                             ##
##########################################################################
setwd("C:/Users/Vidhi Rajanikante/OneDrive/Documents/R Studio/FM/Project/FM Project - Final")
library(openxlsx)
library(fpp3)
library(tsibble)
library(tseries)
library(dbplyr)
library(forecast)
library(ggplot2)
library(urca)
library(tidyverse)
library(fable)
library(lubridate)
library(feasts)
summ_data <- read.csv("FM Summarized Data.csv")
summ_data %>% View()
monthly_tsibble <- summ_data %>%
mutate(month = yearmonth(month)) %>%
as_tsibble(index = month)
monthly_tsibble %>%
autoplot() +
labs(title = 'MiBici Usage in ZMG',
y = 'Total amount of Public Bikes used') +
scale_y_continuous(limits = c(0, 500000), breaks = seq(0, 500000, 50000))
##########################################################################
##                        Data set File Path                             ##
##########################################################################
setwd("C:/Users/Vidhi Rajanikante/OneDrive/Documents/R Studio/FM/Project/FM Project - Final")
##########################################################################
##                          Library Imports                             ##
##########################################################################
library(openxlsx)
library(fpp3)
library(tsibble)
library(tseries)
library(dbplyr)
library(forecast)
library(ggplot2)
library(urca)
library(tidyverse)
library(fable)
library(lubridate)
library(feasts)
##########################################################################
##                        Treating the Dataset                          ##
##########################################################################
summ_data <- read.csv("FM Summarized Data.csv")
summ_data %>% View()
monthly_tsibble <- summ_data %>%
mutate(month = yearmonth(month)) %>%
as_tsibble(index = month)
monthly_tsibble %>%
autoplot() +
labs(title = 'MiBici Usage in ZMG',
y = 'Total amount of Public Bikes used') +
scale_y_continuous(limits = c(0, 500000), breaks = seq(0, 500000, 50000))
monthly_tsibble %>%
autoplot(log(Count)) +
labs(title = 'MiBici Usage in ZMG')
##########################################################################
##             Splitting our Summarized Data for Forecast               ##
##########################################################################
n <- nrow(monthly_tsibble)
training <- monthly_tsibble %>% slice(1:(n-12))
test <- monthly_tsibble %>% slice((n-12):n)
##########################################################################
##                            Base Models                               ##
##########################################################################
basemodels <- monthly_tsibble %>%
filter(!is.na(Count)) %>%
model(
Seasonal_naive = SNAIVE(Count),
Naive = NAIVE(Count),
Drift = RW(Count ~ drift()),
Mean = MEAN(Count))
basemodels_fc <- basemodels %>%
forecast(h=nrow(test)+12)
##########################################################################
##                         Applying ADF Test                            ##
##########################################################################
summary(ur.df(na.omit(monthly_tsibble$Count), type=c("trend"), lags=3))
first_seasonal_diff <- log(monthly_tsibble$Count) %>%
difference(lag=12) %>%
difference()
summary(ur.df(na.omit(first_seasonal_diff), type="none", lags=0))
##########################################################################
##                 Model Identification & Analysis                      ##
##########################################################################
monthly_tsibble %>%
gg_tsdisplay(difference(Count, 1),
plot_type = "partial", lag_max = 37)
# ARIMA (1,1,1)
# SARIMA(1,1,1)(1,0,0)
monthly_tsibble %>%
gg_tsdisplay(difference(log(Count), 1),
plot_type = "partial", lag_max = 49)
# SARIMA(0,1,0)(1,0,2)
monthly_tsibble %>%
gg_tsdisplay(log(Count) %>%
difference(lag=12) %>%
difference(), plot_type = "partial", lag_max = 49)
# SARIMA(0,1,0)(2,1,1)
# SARIMA(0,1,0)(1,1,1)
##########################################################################
##               Model's Residual Analysis & LB Test                    ##
##########################################################################
fit1 <- monthly_tsibble %>%
model(sarima_102 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,0,2)))
fit1 %>% report()
fit1 %>% gg_tsresiduals()
augment(fit1) %>%
features(.innov, ljung_box, lag = 12)
fit2 <- monthly_tsibble %>%
model(sarima_111 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,1,1)))
fit2 %>% report()
fit2 %>% gg_tsresiduals()
augment(fit2) %>%
features(.innov, ljung_box, lag = 12)
##########################################################################
##                          Model Evaluation                            ##
##########################################################################
# Fitting the models to check which models are the best
fit <- monthly_tsibble %>%
model(arima_111 = ARIMA(Count ~ 1 + pdq(0,1,1)),
sarima_100 = ARIMA(Count ~ 1 + pdq(1,1,1) + PDQ(1,0,0)),
sarima_102 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,0,2)),
sarima_211 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(2,1,1)),
sarima_111 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,1,1))
)
# Checking the criteria of each model to check the best one(s)
View(
fit %>%
glance() %>%
arrange(AICc) %>%
select(.model:BIC)
)
# The best models
best_fits <- monthly_tsibble %>%
model(sarima_102 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,0,2)),
sarima_211 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(2,1,1)),
sarima_111 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,1,1)))
best_fits %>%
glance() %>%
arrange(AICc) %>%
select(.model:BIC)
##########################################################################
##                          Forecast Checks                             ##
##########################################################################
monthly_train <- training %>%
model(sarima_111 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,1,1)),
sarima_102 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,0,2))
)
forecasts <- monthly_train %>%
forecast(h = 24)
forecasts %>%
autoplot(training) +
autolayer(test, Count, color = "blue") +
labs(title = 'MiBici Usage in ZMG',
x = "Months [1M]",
y = "Count")
basemodels_fc %>%
autoplot(monthly_tsibble, level = NULL) +
ggtitle("MiBici Usage in ZMG") +
xlab("Month") + ylab("Count") +
guides(colour = guide_legend(title = "Forecast"))
##########################################################################
##                           Final Forecast                             ##
##########################################################################
best_model <- training %>%
model(sarima_111 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,1,1)),
SNAIVE(log(Count)))
forecast <- best_model %>%
forecast(h=24)
forecast %>%
autoplot(training) +
autolayer(test, Count, color = "black") +
labs(title = "MiBici Usage in ZMG: Forecast of SARIMA(0,1,0)(1,1,1)",
x = "Months [1M]",
y = "Count")
accuracy(forecast, test) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MSE,)
accuracy(forecast, test) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MSE, MAPE)
accuracy(forecast, test) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MAE, MAPE)
monthly_train <- training %>%
model(sarima_111 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,1,1)),
sarima_102 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,0,2)),
snaive = SNAIVE(log(Count)))
forecasts <- monthly_train %>%
forecast(h = 24)
forecasts %>%
autoplot(training) +
autolayer(test, Count, color = "blue") +
labs(title = 'MiBici Usage in ZMG',
x = "Months [1M]",
y = "Count")
accuracy(forecast, test) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MAE, MAPE)
basemodels_fc %>%
autoplot(monthly_tsibble, level = NULL) +
ggtitle("MiBici Usage in ZMG") +
xlab("Month") + ylab("Count") +
guides(colour = guide_legend(title = "Forecast"))
monthly_train <- training %>%
model(sarima_111 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,1,1)),
sarima_102 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,0,2)),
snaive = SNAIVE(log(Count)),
naive = NAIVE(log(Count)),
rw = RW(Count ~ drift()))
forecasts <- monthly_train %>%
forecast(h = 24)
forecasts %>%
autoplot(training) +
autolayer(test, Count, color = "blue") +
labs(title = 'MiBici Usage in ZMG',
x = "Months [1M]",
y = "Count")
basemodels_fc %>%
autoplot(monthly_tsibble, level = NULL) +
ggtitle("MiBici Usage in ZMG") +
xlab("Month") + ylab("Count") +
guides(colour = guide_legend(title = "Forecast"))
forecasts %>%
autoplot(training) +
autolayer(test, Count, color = "blue") +
labs(title = 'MiBici Usage in ZMG',
x = "Months [1M]",
y = "Count")
best_model <- training %>%
model(sarima_111 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,1,1)))
forecast <- best_model %>%
forecast(h=24)
forecast %>%
autoplot(training) +
autolayer(test, Count, color = "black") +
labs(title = "MiBici Usage in ZMG: Forecast of SARIMA(0,1,0)(1,1,1)",
x = "Months [1M]",
y = "Count")
forecasts %>%
autoplot(training) +
autolayer(test, Count, color = "blue") +
labs(title = 'MiBici Usage in ZMG',
x = "Months [1M]",
y = "Count")
View(accuracy(forecast, test) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MAE, MAPE))
View(accuracy(forecasts, test) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MAE, MAPE))
View(accuracy(forecasts, test) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MAE, MAPE))
View(accuracy(forecasts, test) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MAE, ME, MAPE, MASE))
View(accuracy(forecasts, test) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MAE, ME, MAPE, MPE))
library(wooldridge)
# problem 74
reg <- lm(lprice ~ llotsize + lsqrft + bdrms, data=hprice1)
reg
library(lmtest)
bptest(reg)
summary(lm(reside(reg)^2 ~ llotsize + lsqrft + bdrms, data=hprice1))
summary(lm(resid(reg)^2 ~ llotsize + lsqrft + bdrms, data=hprice1))
whitefull = lm(resid(reg)^2 ~ llotsize + lsqrft + bdrms +
I(llotsize^2) + I(lsqrft^2) + I(bdrms^2) + I(llotsize*lsqrft) +
I(llotsize*bdrms) + I(lsqrft*bdrms), data=hprice1)
summary(whitefull)
nobs(reg) * summary(whitefull)$r.squared
bptest(reg, )llotsize + lsqrft + bdrms +
bptest(reg, llotsize + lsqrft + bdrms +
I(llotsize^2) + I(lsqrft^2) + I(bdrms^2) + I(llotsize*lsqrft) +
I(llotsize*bdrms) + I(lsqrft*bdrms), data=hprice1)
bptest(reg, ~llotsize + lsqrft + bdrms +
I(llotsize^2) + I(lsqrft^2) + I(bdrms^2) + I(llotsize*lsqrft) +
I(llotsize*bdrms) + I(lsqrft*bdrms), data=hprice1)
bptest(reg)
bptest(reg, ~fitted(reg) + I(fitted(reg)^2))
monthly_train <- training %>%
model(sarima_111 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,1,1)),
sarima_211 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(2,1,1))
sarima_102 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,0,2)),
monthly_train <- training %>%
model(sarima_111 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,1,1)),
sarima_211 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(2,1,1)),
sarima_102 = ARIMA(log(Count) ~ 1 + pdq(0,1,0) + PDQ(1,0,2)),
snaive = SNAIVE(log(Count)),
naive = NAIVE(log(Count)),
rw = RW(Count ~ drift()))
forecasts <- monthly_train %>%
forecast(h = 24)
View(accuracy(forecasts, test) %>%
arrange(.model) %>%
select(.model, .type, RMSE, MAE, MAPE))
